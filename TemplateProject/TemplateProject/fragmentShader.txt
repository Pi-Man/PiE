#version 330 core

in vec3 ObjectPos;
in vec3 Normal;
in vec2 uv;
in vec3 Color;

out vec4 col;

uniform sampler2D main_tex;
uniform float time;
uniform vec2 z0;

vec2 square(vec2 z) {
	vec2 z2;
	z2.x = z.x * z.x - z.y * z.y;
	z2.y = z.x * z.y * 2;
	return z2;
}

#define MAX_COUNT 1000.0
#define PI 3.1415926535

void main() {
	vec2 c = ObjectPos.xy;
	vec2 z = z0;
	float count = 0;
	while (dot(z, z) < 16 && count < MAX_COUNT) {
		z = square(z) + c;
		count++;
	}
	float x = 1 - exp(-count / 100.0);
    col = vec4(sin(x*5.5*PI), sin(x*5.5*PI - PI/2), sin(x*5.5*PI - PI), 1);
}